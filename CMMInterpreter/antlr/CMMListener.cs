//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CMM.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CMMParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface ICMMListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatements([NotNull] CMMParser.StatementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatements([NotNull] CMMParser.StatementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] CMMParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] CMMParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] CMMParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] CMMParser.ExpressionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] CMMParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] CMMParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] CMMParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] CMMParser.ExpressionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExpression([NotNull] CMMParser.BoolExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExpression([NotNull] CMMParser.BoolExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.relationalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalOperator([NotNull] CMMParser.RelationalOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.relationalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalOperator([NotNull] CMMParser.RelationalOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] CMMParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] CMMParser.AdditiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] CMMParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] CMMParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] CMMParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] CMMParser.FactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] CMMParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] CMMParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaration([NotNull] CMMParser.VariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaration([NotNull] CMMParser.VariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] CMMParser.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] CMMParser.FunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.initializerList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializerList([NotNull] CMMParser.InitializerListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.initializerList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializerList([NotNull] CMMParser.InitializerListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializer([NotNull] CMMParser.InitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializer([NotNull] CMMParser.InitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnType([NotNull] CMMParser.ReturnTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnType([NotNull] CMMParser.ReturnTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.parameterClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterClause([NotNull] CMMParser.ParameterClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.parameterClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterClause([NotNull] CMMParser.ParameterClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterList([NotNull] CMMParser.ParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterList([NotNull] CMMParser.ParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeSpecifier([NotNull] CMMParser.TypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeSpecifier([NotNull] CMMParser.TypeSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.assignStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStatement([NotNull] CMMParser.AssignStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.assignStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStatement([NotNull] CMMParser.AssignStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] CMMParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] CMMParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.leftValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeftValue([NotNull] CMMParser.LeftValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.leftValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeftValue([NotNull] CMMParser.LeftValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] CMMParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] CMMParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.doWhileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoWhileStatement([NotNull] CMMParser.DoWhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.doWhileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoWhileStatement([NotNull] CMMParser.DoWhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] CMMParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] CMMParser.ForStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.forInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForInitializer([NotNull] CMMParser.ForInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.forInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForInitializer([NotNull] CMMParser.ForInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] CMMParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] CMMParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.elseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseClause([NotNull] CMMParser.ElseClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.elseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseClause([NotNull] CMMParser.ElseClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.readStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReadStatement([NotNull] CMMParser.ReadStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.readStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReadStatement([NotNull] CMMParser.ReadStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.writeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWriteStatement([NotNull] CMMParser.WriteStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.writeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWriteStatement([NotNull] CMMParser.WriteStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJumpStatement([NotNull] CMMParser.JumpStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJumpStatement([NotNull] CMMParser.JumpStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.callStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallStatement([NotNull] CMMParser.CallStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.callStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallStatement([NotNull] CMMParser.CallStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CMMParser.codeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeBlock([NotNull] CMMParser.CodeBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CMMParser.codeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeBlock([NotNull] CMMParser.CodeBlockContext context);
}
