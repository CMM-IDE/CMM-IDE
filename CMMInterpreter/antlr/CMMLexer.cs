//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CMM.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class CMMLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, If=4, Else=5, While=6, Do=7, For=8, Return=9, 
		Break=10, Continue=11, Int=12, Real=13, Bool=14, Void=15, Add=16, Sub=17, 
		Mul=18, Div=19, Assign=20, Equal=21, NotEqual=22, Less=23, LessEqual=24, 
		Greater=25, GreaterEqual=26, Not=27, And=28, Or=29, LeftParen=30, RightParen=31, 
		LeftBarce=32, RightBrace=33, LeftBracket=34, RightBracket=35, Semicolon=36, 
		Comma=37, Dot=38, Dash=39, Identifier=40, IntegerLiteral=41, RealLiteral=42, 
		Alpha=43, Digit=44, Whitespce=45;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "If", "Else", "While", "Do", "For", "Return", 
		"Break", "Continue", "Int", "Real", "Bool", "Void", "Add", "Sub", "Mul", 
		"Div", "Assign", "Equal", "NotEqual", "Less", "LessEqual", "Greater", 
		"GreaterEqual", "Not", "And", "Or", "LeftParen", "RightParen", "LeftBarce", 
		"RightBrace", "LeftBracket", "RightBracket", "Semicolon", "Comma", "Dot", 
		"Dash", "Identifier", "IntegerLiteral", "RealLiteral", "Alpha", "Digit", 
		"Whitespce"
	};


	public CMMLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CMMLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'\u2013'", "'read'", "'write'", "'if'", "'else'", "'while'", "'do'", 
		"'for'", "'return'", "'break'", "'continue'", "'int'", "'real'", "'bool'", 
		"'void'", "'+'", "'-'", "'*'", "'/'", "'='", "'=='", "'<>'", "'<'", "'<='", 
		"'>'", "'>='", "'!'", "'&&'", "'||'", "'('", "')'", "'{'", "'}'", "'['", 
		"']'", "';'", "','", "'.'", "'_'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, "If", "Else", "While", "Do", "For", "Return", 
		"Break", "Continue", "Int", "Real", "Bool", "Void", "Add", "Sub", "Mul", 
		"Div", "Assign", "Equal", "NotEqual", "Less", "LessEqual", "Greater", 
		"GreaterEqual", "Not", "And", "Or", "LeftParen", "RightParen", "LeftBarce", 
		"RightBrace", "LeftBracket", "RightBracket", "Semicolon", "Comma", "Dot", 
		"Dash", "Identifier", "IntegerLiteral", "RealLiteral", "Alpha", "Digit", 
		"Whitespce"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CMM.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CMMLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '/', '\x104', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', '\"', '\x4', 
		'#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', '%', '\x4', '&', 
		'\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', '(', '\x4', ')', 
		'\t', ')', '\x4', '*', '\t', '*', '\x4', '+', '\t', '+', '\x4', ',', '\t', 
		',', '\x4', '-', '\t', '-', '\x4', '.', '\t', '.', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', 
		'\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', 
		'\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', 
		'\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', 
		'\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', 
		'\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', 
		'\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1D', '\x3', '\x1D', 
		'\x3', '\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', 
		'\x3', '\x1F', '\x3', ' ', '\x3', ' ', '\x3', '!', '\x3', '!', '\x3', 
		'\"', '\x3', '\"', '\x3', '#', '\x3', '#', '\x3', '$', '\x3', '$', '\x3', 
		'%', '\x3', '%', '\x3', '&', '\x3', '&', '\x3', '\'', '\x3', '\'', '\x3', 
		'(', '\x3', '(', '\x3', ')', '\x3', ')', '\x3', ')', '\x3', ')', '\a', 
		')', '\xE3', '\n', ')', '\f', ')', '\xE', ')', '\xE6', '\v', ')', '\x3', 
		')', '\x3', ')', '\x5', ')', '\xEA', '\n', ')', '\x5', ')', '\xEC', '\n', 
		')', '\x3', '*', '\x3', '*', '\a', '*', '\xF0', '\n', '*', '\f', '*', 
		'\xE', '*', '\xF3', '\v', '*', '\x3', '+', '\x3', '+', '\x3', '+', '\x5', 
		'+', '\xF8', '\n', '+', '\x3', ',', '\x3', ',', '\x3', '-', '\x3', '-', 
		'\x3', '.', '\x6', '.', '\xFF', '\n', '.', '\r', '.', '\xE', '.', '\x100', 
		'\x3', '.', '\x3', '.', '\x2', '\x2', '/', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', 
		'\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', 
		'\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', '\x18', '/', '\x19', 
		'\x31', '\x1A', '\x33', '\x1B', '\x35', '\x1C', '\x37', '\x1D', '\x39', 
		'\x1E', ';', '\x1F', '=', ' ', '?', '!', '\x41', '\"', '\x43', '#', '\x45', 
		'$', 'G', '%', 'I', '&', 'K', '\'', 'M', '(', 'O', ')', 'Q', '*', 'S', 
		'+', 'U', ',', 'W', '-', 'Y', '.', '[', '/', '\x3', '\x2', '\x5', '\x4', 
		'\x2', '\x43', '\\', '\x63', '|', '\x3', '\x2', '\x32', ';', '\x5', '\x2', 
		'\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', '\x10B', '\x2', '\x3', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x33', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x35', '\x3', '\x2', '\x2', '\x2', '\x2', '\x37', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x39', '\x3', '\x2', '\x2', '\x2', '\x2', ';', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '=', '\x3', '\x2', '\x2', '\x2', '\x2', '?', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x41', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x43', '\x3', '\x2', '\x2', '\x2', '\x2', '\x45', '\x3', '\x2', 
		'\x2', '\x2', '\x2', 'G', '\x3', '\x2', '\x2', '\x2', '\x2', 'I', '\x3', 
		'\x2', '\x2', '\x2', '\x2', 'K', '\x3', '\x2', '\x2', '\x2', '\x2', 'M', 
		'\x3', '\x2', '\x2', '\x2', '\x2', 'O', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'Q', '\x3', '\x2', '\x2', '\x2', '\x2', 'S', '\x3', '\x2', '\x2', '\x2', 
		'\x2', 'U', '\x3', '\x2', '\x2', '\x2', '\x2', 'W', '\x3', '\x2', '\x2', 
		'\x2', '\x2', 'Y', '\x3', '\x2', '\x2', '\x2', '\x2', '[', '\x3', '\x2', 
		'\x2', '\x2', '\x3', ']', '\x3', '\x2', '\x2', '\x2', '\x5', '_', '\x3', 
		'\x2', '\x2', '\x2', '\a', '\x64', '\x3', '\x2', '\x2', '\x2', '\t', 'j', 
		'\x3', '\x2', '\x2', '\x2', '\v', 'm', '\x3', '\x2', '\x2', '\x2', '\r', 
		'r', '\x3', '\x2', '\x2', '\x2', '\xF', 'x', '\x3', '\x2', '\x2', '\x2', 
		'\x11', '{', '\x3', '\x2', '\x2', '\x2', '\x13', '\x7F', '\x3', '\x2', 
		'\x2', '\x2', '\x15', '\x86', '\x3', '\x2', '\x2', '\x2', '\x17', '\x8C', 
		'\x3', '\x2', '\x2', '\x2', '\x19', '\x95', '\x3', '\x2', '\x2', '\x2', 
		'\x1B', '\x99', '\x3', '\x2', '\x2', '\x2', '\x1D', '\x9E', '\x3', '\x2', 
		'\x2', '\x2', '\x1F', '\xA3', '\x3', '\x2', '\x2', '\x2', '!', '\xA8', 
		'\x3', '\x2', '\x2', '\x2', '#', '\xAA', '\x3', '\x2', '\x2', '\x2', '%', 
		'\xAC', '\x3', '\x2', '\x2', '\x2', '\'', '\xAE', '\x3', '\x2', '\x2', 
		'\x2', ')', '\xB0', '\x3', '\x2', '\x2', '\x2', '+', '\xB2', '\x3', '\x2', 
		'\x2', '\x2', '-', '\xB5', '\x3', '\x2', '\x2', '\x2', '/', '\xB8', '\x3', 
		'\x2', '\x2', '\x2', '\x31', '\xBA', '\x3', '\x2', '\x2', '\x2', '\x33', 
		'\xBD', '\x3', '\x2', '\x2', '\x2', '\x35', '\xBF', '\x3', '\x2', '\x2', 
		'\x2', '\x37', '\xC2', '\x3', '\x2', '\x2', '\x2', '\x39', '\xC4', '\x3', 
		'\x2', '\x2', '\x2', ';', '\xC7', '\x3', '\x2', '\x2', '\x2', '=', '\xCA', 
		'\x3', '\x2', '\x2', '\x2', '?', '\xCC', '\x3', '\x2', '\x2', '\x2', '\x41', 
		'\xCE', '\x3', '\x2', '\x2', '\x2', '\x43', '\xD0', '\x3', '\x2', '\x2', 
		'\x2', '\x45', '\xD2', '\x3', '\x2', '\x2', '\x2', 'G', '\xD4', '\x3', 
		'\x2', '\x2', '\x2', 'I', '\xD6', '\x3', '\x2', '\x2', '\x2', 'K', '\xD8', 
		'\x3', '\x2', '\x2', '\x2', 'M', '\xDA', '\x3', '\x2', '\x2', '\x2', 'O', 
		'\xDC', '\x3', '\x2', '\x2', '\x2', 'Q', '\xDE', '\x3', '\x2', '\x2', 
		'\x2', 'S', '\xED', '\x3', '\x2', '\x2', '\x2', 'U', '\xF4', '\x3', '\x2', 
		'\x2', '\x2', 'W', '\xF9', '\x3', '\x2', '\x2', '\x2', 'Y', '\xFB', '\x3', 
		'\x2', '\x2', '\x2', '[', '\xFE', '\x3', '\x2', '\x2', '\x2', ']', '^', 
		'\a', '\x2015', '\x2', '\x2', '^', '\x4', '\x3', '\x2', '\x2', '\x2', 
		'_', '`', '\a', 't', '\x2', '\x2', '`', '\x61', '\a', 'g', '\x2', '\x2', 
		'\x61', '\x62', '\a', '\x63', '\x2', '\x2', '\x62', '\x63', '\a', '\x66', 
		'\x2', '\x2', '\x63', '\x6', '\x3', '\x2', '\x2', '\x2', '\x64', '\x65', 
		'\a', 'y', '\x2', '\x2', '\x65', '\x66', '\a', 't', '\x2', '\x2', '\x66', 
		'g', '\a', 'k', '\x2', '\x2', 'g', 'h', '\a', 'v', '\x2', '\x2', 'h', 
		'i', '\a', 'g', '\x2', '\x2', 'i', '\b', '\x3', '\x2', '\x2', '\x2', 'j', 
		'k', '\a', 'k', '\x2', '\x2', 'k', 'l', '\a', 'h', '\x2', '\x2', 'l', 
		'\n', '\x3', '\x2', '\x2', '\x2', 'm', 'n', '\a', 'g', '\x2', '\x2', 'n', 
		'o', '\a', 'n', '\x2', '\x2', 'o', 'p', '\a', 'u', '\x2', '\x2', 'p', 
		'q', '\a', 'g', '\x2', '\x2', 'q', '\f', '\x3', '\x2', '\x2', '\x2', 'r', 
		's', '\a', 'y', '\x2', '\x2', 's', 't', '\a', 'j', '\x2', '\x2', 't', 
		'u', '\a', 'k', '\x2', '\x2', 'u', 'v', '\a', 'n', '\x2', '\x2', 'v', 
		'w', '\a', 'g', '\x2', '\x2', 'w', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'x', 'y', '\a', '\x66', '\x2', '\x2', 'y', 'z', '\a', 'q', '\x2', '\x2', 
		'z', '\x10', '\x3', '\x2', '\x2', '\x2', '{', '|', '\a', 'h', '\x2', '\x2', 
		'|', '}', '\a', 'q', '\x2', '\x2', '}', '~', '\a', 't', '\x2', '\x2', 
		'~', '\x12', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', '\a', 't', '\x2', 
		'\x2', '\x80', '\x81', '\a', 'g', '\x2', '\x2', '\x81', '\x82', '\a', 
		'v', '\x2', '\x2', '\x82', '\x83', '\a', 'w', '\x2', '\x2', '\x83', '\x84', 
		'\a', 't', '\x2', '\x2', '\x84', '\x85', '\a', 'p', '\x2', '\x2', '\x85', 
		'\x14', '\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\a', '\x64', '\x2', 
		'\x2', '\x87', '\x88', '\a', 't', '\x2', '\x2', '\x88', '\x89', '\a', 
		'g', '\x2', '\x2', '\x89', '\x8A', '\a', '\x63', '\x2', '\x2', '\x8A', 
		'\x8B', '\a', 'm', '\x2', '\x2', '\x8B', '\x16', '\x3', '\x2', '\x2', 
		'\x2', '\x8C', '\x8D', '\a', '\x65', '\x2', '\x2', '\x8D', '\x8E', '\a', 
		'q', '\x2', '\x2', '\x8E', '\x8F', '\a', 'p', '\x2', '\x2', '\x8F', '\x90', 
		'\a', 'v', '\x2', '\x2', '\x90', '\x91', '\a', 'k', '\x2', '\x2', '\x91', 
		'\x92', '\a', 'p', '\x2', '\x2', '\x92', '\x93', '\a', 'w', '\x2', '\x2', 
		'\x93', '\x94', '\a', 'g', '\x2', '\x2', '\x94', '\x18', '\x3', '\x2', 
		'\x2', '\x2', '\x95', '\x96', '\a', 'k', '\x2', '\x2', '\x96', '\x97', 
		'\a', 'p', '\x2', '\x2', '\x97', '\x98', '\a', 'v', '\x2', '\x2', '\x98', 
		'\x1A', '\x3', '\x2', '\x2', '\x2', '\x99', '\x9A', '\a', 't', '\x2', 
		'\x2', '\x9A', '\x9B', '\a', 'g', '\x2', '\x2', '\x9B', '\x9C', '\a', 
		'\x63', '\x2', '\x2', '\x9C', '\x9D', '\a', 'n', '\x2', '\x2', '\x9D', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', '\x9E', '\x9F', '\a', '\x64', '\x2', 
		'\x2', '\x9F', '\xA0', '\a', 'q', '\x2', '\x2', '\xA0', '\xA1', '\a', 
		'q', '\x2', '\x2', '\xA1', '\xA2', '\a', 'n', '\x2', '\x2', '\xA2', '\x1E', 
		'\x3', '\x2', '\x2', '\x2', '\xA3', '\xA4', '\a', 'x', '\x2', '\x2', '\xA4', 
		'\xA5', '\a', 'q', '\x2', '\x2', '\xA5', '\xA6', '\a', 'k', '\x2', '\x2', 
		'\xA6', '\xA7', '\a', '\x66', '\x2', '\x2', '\xA7', ' ', '\x3', '\x2', 
		'\x2', '\x2', '\xA8', '\xA9', '\a', '-', '\x2', '\x2', '\xA9', '\"', '\x3', 
		'\x2', '\x2', '\x2', '\xAA', '\xAB', '\a', '/', '\x2', '\x2', '\xAB', 
		'$', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xAD', '\a', ',', '\x2', '\x2', 
		'\xAD', '&', '\x3', '\x2', '\x2', '\x2', '\xAE', '\xAF', '\a', '\x31', 
		'\x2', '\x2', '\xAF', '(', '\x3', '\x2', '\x2', '\x2', '\xB0', '\xB1', 
		'\a', '?', '\x2', '\x2', '\xB1', '*', '\x3', '\x2', '\x2', '\x2', '\xB2', 
		'\xB3', '\a', '?', '\x2', '\x2', '\xB3', '\xB4', '\a', '?', '\x2', '\x2', 
		'\xB4', ',', '\x3', '\x2', '\x2', '\x2', '\xB5', '\xB6', '\a', '>', '\x2', 
		'\x2', '\xB6', '\xB7', '\a', '@', '\x2', '\x2', '\xB7', '.', '\x3', '\x2', 
		'\x2', '\x2', '\xB8', '\xB9', '\a', '>', '\x2', '\x2', '\xB9', '\x30', 
		'\x3', '\x2', '\x2', '\x2', '\xBA', '\xBB', '\a', '>', '\x2', '\x2', '\xBB', 
		'\xBC', '\a', '?', '\x2', '\x2', '\xBC', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\xBD', '\xBE', '\a', '@', '\x2', '\x2', '\xBE', '\x34', '\x3', 
		'\x2', '\x2', '\x2', '\xBF', '\xC0', '\a', '@', '\x2', '\x2', '\xC0', 
		'\xC1', '\a', '?', '\x2', '\x2', '\xC1', '\x36', '\x3', '\x2', '\x2', 
		'\x2', '\xC2', '\xC3', '\a', '#', '\x2', '\x2', '\xC3', '\x38', '\x3', 
		'\x2', '\x2', '\x2', '\xC4', '\xC5', '\a', '(', '\x2', '\x2', '\xC5', 
		'\xC6', '\a', '(', '\x2', '\x2', '\xC6', ':', '\x3', '\x2', '\x2', '\x2', 
		'\xC7', '\xC8', '\a', '~', '\x2', '\x2', '\xC8', '\xC9', '\a', '~', '\x2', 
		'\x2', '\xC9', '<', '\x3', '\x2', '\x2', '\x2', '\xCA', '\xCB', '\a', 
		'*', '\x2', '\x2', '\xCB', '>', '\x3', '\x2', '\x2', '\x2', '\xCC', '\xCD', 
		'\a', '+', '\x2', '\x2', '\xCD', '@', '\x3', '\x2', '\x2', '\x2', '\xCE', 
		'\xCF', '\a', '}', '\x2', '\x2', '\xCF', '\x42', '\x3', '\x2', '\x2', 
		'\x2', '\xD0', '\xD1', '\a', '\x7F', '\x2', '\x2', '\xD1', '\x44', '\x3', 
		'\x2', '\x2', '\x2', '\xD2', '\xD3', '\a', ']', '\x2', '\x2', '\xD3', 
		'\x46', '\x3', '\x2', '\x2', '\x2', '\xD4', '\xD5', '\a', '_', '\x2', 
		'\x2', '\xD5', 'H', '\x3', '\x2', '\x2', '\x2', '\xD6', '\xD7', '\a', 
		'=', '\x2', '\x2', '\xD7', 'J', '\x3', '\x2', '\x2', '\x2', '\xD8', '\xD9', 
		'\a', '.', '\x2', '\x2', '\xD9', 'L', '\x3', '\x2', '\x2', '\x2', '\xDA', 
		'\xDB', '\a', '\x30', '\x2', '\x2', '\xDB', 'N', '\x3', '\x2', '\x2', 
		'\x2', '\xDC', '\xDD', '\a', '\x61', '\x2', '\x2', '\xDD', 'P', '\x3', 
		'\x2', '\x2', '\x2', '\xDE', '\xEB', '\x5', 'W', ',', '\x2', '\xDF', '\xE3', 
		'\x5', 'Y', '-', '\x2', '\xE0', '\xE3', '\x5', 'W', ',', '\x2', '\xE1', 
		'\xE3', '\a', '\x61', '\x2', '\x2', '\xE2', '\xDF', '\x3', '\x2', '\x2', 
		'\x2', '\xE2', '\xE0', '\x3', '\x2', '\x2', '\x2', '\xE2', '\xE1', '\x3', 
		'\x2', '\x2', '\x2', '\xE3', '\xE6', '\x3', '\x2', '\x2', '\x2', '\xE4', 
		'\xE2', '\x3', '\x2', '\x2', '\x2', '\xE4', '\xE5', '\x3', '\x2', '\x2', 
		'\x2', '\xE5', '\xE9', '\x3', '\x2', '\x2', '\x2', '\xE6', '\xE4', '\x3', 
		'\x2', '\x2', '\x2', '\xE7', '\xEA', '\x5', 'Y', '-', '\x2', '\xE8', '\xEA', 
		'\x5', 'W', ',', '\x2', '\xE9', '\xE7', '\x3', '\x2', '\x2', '\x2', '\xE9', 
		'\xE8', '\x3', '\x2', '\x2', '\x2', '\xEA', '\xEC', '\x3', '\x2', '\x2', 
		'\x2', '\xEB', '\xE4', '\x3', '\x2', '\x2', '\x2', '\xEB', '\xEC', '\x3', 
		'\x2', '\x2', '\x2', '\xEC', 'R', '\x3', '\x2', '\x2', '\x2', '\xED', 
		'\xF1', '\x5', 'Y', '-', '\x2', '\xEE', '\xF0', '\x5', 'Y', '-', '\x2', 
		'\xEF', '\xEE', '\x3', '\x2', '\x2', '\x2', '\xF0', '\xF3', '\x3', '\x2', 
		'\x2', '\x2', '\xF1', '\xEF', '\x3', '\x2', '\x2', '\x2', '\xF1', '\xF2', 
		'\x3', '\x2', '\x2', '\x2', '\xF2', 'T', '\x3', '\x2', '\x2', '\x2', '\xF3', 
		'\xF1', '\x3', '\x2', '\x2', '\x2', '\xF4', '\xF7', '\x5', 'S', '*', '\x2', 
		'\xF5', '\xF6', '\a', '\x30', '\x2', '\x2', '\xF6', '\xF8', '\x5', 'S', 
		'*', '\x2', '\xF7', '\xF5', '\x3', '\x2', '\x2', '\x2', '\xF7', '\xF8', 
		'\x3', '\x2', '\x2', '\x2', '\xF8', 'V', '\x3', '\x2', '\x2', '\x2', '\xF9', 
		'\xFA', '\t', '\x2', '\x2', '\x2', '\xFA', 'X', '\x3', '\x2', '\x2', '\x2', 
		'\xFB', '\xFC', '\t', '\x3', '\x2', '\x2', '\xFC', 'Z', '\x3', '\x2', 
		'\x2', '\x2', '\xFD', '\xFF', '\t', '\x4', '\x2', '\x2', '\xFE', '\xFD', 
		'\x3', '\x2', '\x2', '\x2', '\xFF', '\x100', '\x3', '\x2', '\x2', '\x2', 
		'\x100', '\xFE', '\x3', '\x2', '\x2', '\x2', '\x100', '\x101', '\x3', 
		'\x2', '\x2', '\x2', '\x101', '\x102', '\x3', '\x2', '\x2', '\x2', '\x102', 
		'\x103', '\b', '.', '\x2', '\x2', '\x103', '\\', '\x3', '\x2', '\x2', 
		'\x2', '\n', '\x2', '\xE2', '\xE4', '\xE9', '\xEB', '\xF1', '\xF7', '\x100', 
		'\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
